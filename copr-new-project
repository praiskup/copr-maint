#! /usr/bin/python3

import sys
sys.path.append('/usr/share/copr/coprs_frontend/')

import argparse
import logging
from contextlib import contextmanager
from sqlalchemy.orm import sessionmaker, scoped_session
from coprs.logic.coprs_logic import CoprsLogic
import flask

from coprs import app
from coprs import db
from coprs import helpers
from coprs import models

logging.basicConfig()
log = logging.getLogger()

description = """
Create new project for any user, and grant admin permissions.
"""
parser = argparse.ArgumentParser(
    description=description,
)

parser.add_argument(
    "name",
    help="name of the project"
)

parser.add_argument(
    "--owner",
    required=True,
    help="what username this project belongs to",
)

parser.add_argument(
    "--admin",
    action="append",
    help="add admin user")

args = parser.parse_args()

@contextmanager
def db_session_scope():
    """Provide a transactional scope around a series of operations."""
    session = db.session
    try:
        yield session
        session.commit()
    except Exception as err:
        session.rollback()
        raise

with app.app_context():
    with db_session_scope() as session:
        owner = session.query(models.User).filter(models.User.username==args.owner).first()
        flask.g.user = owner

        if not owner:
            raise Exception("owner user '{0}' not found".format(args.owner))

        if args.admin is None:
            args.admin = []

        users = session.query(models.User).filter(models.User.username.in_(args.admin)).all()
        if len(users) != len(args.admin):
            raise Exception("some admin users not found: " + str(args.admin))

        # TODO: select something from database (not every copr instance has this)
        enable_chroots = ['fedora-rawhide-x86_64']

        project = CoprsLogic.add(
            user=owner,
            name=args.name,
            selected_chroots=enable_chroots,
        )

        for user in users:
            permission = models.CoprPermission(
                user=user,
                copr=project,
                copr_admin=helpers.PermissionEnum("approved"),
                copr_builder=helpers.PermissionEnum("approved"),
            )
            session.add(permission)
